Q-how do share data between module..?
sol- using "output"

Q-Terraform workflow..?
init,plan and apply


Q-provisioned webapp using terraform,again renamed the webapp name,what happens..? will it destroys and recreate..?
sol- no it will not destroy and recreate,it will just update the name
during the plan it shows what is changed.


Q-#manually telling to terraform variable values
terraform apply -auto-approve -var-file dev.tfvars

#precedence of variables
#high priority ---(top to down)-----------------#low priority
-var (commandline
-var-file (commnad line)
*auto.tfvars (automatic)
terraform.tfvars (automatic)
SHELL
ENV
VARS

if variable value terraform didnt find then it will ask for the value

#can we deal multiple providers at a time..?
yes


#provider
terraform has multiple providers ex: aws,azure,gcp,github etc
every provider has version 
if provider version not provided it will take latest version

# you have same provider(aws), u have 2 aws accounts or multiple regions,and u want to create resources in both the accounts or regions, how do u deal with it..?
using alias, need to add alias to resource

#diff btw refresh vs import

#map
this comes in for each loop

#in terraform class i remember one of the learner had asked that instead of dev state file knowingly or unknowingly pointed to prod state file, since we had backend as s3, will there b possible to restore the statefile,would it possible to restore..?
sol- versioning or cross region replication

#terraform console
The terraform console command provides an interactive console for evaluating expressions.

example
=======
terraform console
> max(5, 12, 9)
12

> lower("HELLO")
"hello"

#provisioners
===============
are used to execute certain tasks after the resource creation
ex: connect to instance and perform/execute commands on that instance/copy somefile

provsioner is always sub block of resource

we can make multiple provisioners and provisioner types in the same resource

#example
=======
1st time i have created resource and with null resource and provisioner i have executed something -this is done.
2nd time i have modified the command in provisioner if i rerun what happens..?
sol: changes wont get detected by default,reasons as follows
     terraform refers the state file and they dont detect the changes
     and,terraform thinks that null resource is already created and main resource too.

in order detect the changes we have to add "trigger" property

resource "null_resource" "cli" {

    triggers = {
      #every time to run the provisioner
      abc = timestamp()
    }

    provisioner "remote-exec" {
    connection {
      host = aws_instance.web.public_ip
      user   = "root"
      password = "DevOps321"
    }
    #inline is list of commands
    inline = [
      "echo Hey Buddy",
      "echo Welcome Terraform Learning 2022"
      
    ]
  }


}

#dataresource
is to refer existing resources in the provider
q-display instance which are running from terraform
sol-

data "aws_instances" "test" {
    instance_state_names = ["running", "stopped"]
}

#display instances which are running
output "instances" {
    value = data.aws_instances.test
  
}


#creating multiple instances at a time

main.tf
resource "aws_instance" "application" {

    count = length(var.components)
    #pulling from data resource
    ami = data.aws_ami.ami.image_id
    instance_type = "t3.micro"

    tags = {
      Name = "${var.components["${"count.index"]}-dev"
   #terraform needs as a variable(${var.components)
   #loop count is also as variable(["${"count.index"]}-dev")
    }

}
s


vars.tf
variable "components" {
    default = ["frontend", "catalogue", "cart", "user", "shipping", "payment", "mongodb", "redis", "mysql", "rabbitmq"]
  
}

data.tf
#getting ami id
data "aws_ami" "ami" {
    most_recent = true
    name_regex  = "devops-practice-centos-with-ansible"
    owners      = ["self"]
  
}






